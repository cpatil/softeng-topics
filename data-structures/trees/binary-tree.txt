Binary Tree:

	A tree whose elements have at most 2 children is called a binary tree

Use cases:

	Manipulate hierarchical data
	Make information easy to search (tree traversal)
	Manipulate sorted lists of data
	As a workflow for compositing digital images for visual effects
	Router Algorithms
	Form of a multi-stage decision-making (see business chess)

Properties:

	The maximum number of nodes at level 'l' of a binary tree is 2^l 

		Here level is the number of nodes on the path from the root to the node
		(including root and node). 

		Level of the root is 0. 

		This can be proved by induction. 

		For root, l = 0, number of nodes = 20 = 1 

		Assume that the	maximum number of nodes on level ‘l’ is 2l 

		Since in Binary tree every node has at most 2 children, next level 
		would have twice nodes, i.e. 2 * 2l

	The maximum number of nodes in a binary tree of height 'h' is 2^h - 1

		Here the height of a tree is the maximum number of nodes on the root to
		leaf path. Height of a tree with a single node is considered as 1. 

		This result can be derived from point 2 above. A tree has maximum nodes
		if all levels have maximum nodes. So maximum number of nodes in a binary
		tree of height h is 1 + 2 + 4 + .. + 2h. This is a simple geometric
		series with h terms and sum of this series is 2h– 1. 

		In some books, the height of the root is considered as 0. In this
		convention, the above formula becomes 2h+1 – 1 

	In a Binary Tree with N nodes, minimum possible height or the minimum number
	of levels is? Log(N+1)

		This can be directly derived from point 2 above. If we consider the
		convention where the height of a root node is considered as 0, then
		above formula for minimum possible height becomes |Log(N+1)| - 1

	A Binary Tree with L leaves has at least |LogL| + 1 levels

		A Binary tree has the maximum number of leaves (and a minimum number of
		levels) when all levels are fully filled. Let all leaves be at level l,
		then below is true for the number of leaves L. 

	In a Binary Tree where every node has 0 or 2 children, the number of leaf
	nodes is always one more than nodes with two children

Full Binary Tree:

	A Binary Tree is a full binary tree if every node has 0 or 2
	children. The following are the examples of a full binary tree. We can also say
	a full binary tree is a binary tree in which all nodes except leaf nodes have
	two children. 

Complete Binary Tree:

	 A Binary Tree is a Complete Binary Tree if all the levels are completely
	 filled except possibly the last level and the last level has all keys as
	 left as possible 

Perfect Binary Tree:

	A Binary tree is a Perfect Binary Tree in which all the internal nodes have
	two children and all leaf nodes are at the same level. 

Balanced Binary Tree:

	A binary tree is balanced if the height of the tree is O(Log n) where n is
	the number of nodes. For Example, the AVL tree maintains O(Log n) height by
	making sure that the difference between the heights of the left and right
	subtrees is at most 1. Red-Black trees maintain O(Log n) height by making
	sure that the number of Black nodes on every root to leaf paths is the same
	and there are no adjacent red nodes. Balanced Binary Search trees are
	performance-wise good as they provide O(log n) time for search, insert and
	delete. 
In concurrency control of databases, transaction processing (transaction
management), and various transactional applications (e.g., transactional memory
and software transactional memory), both centralized and distributed, a
transaction schedule is serializable if its outcome (e.g., the resulting
database state) is equal to the outcome of its transactions executed serially,
i.e. without overlapping in time. Transactions are normally executed
concurrently (they overlap), since this is the most efficient way.
Serializability is the major correctness criterion for concurrent transactions'
executions. It is considered the highest level of isolation between
transactions, and plays an essential role in concurrency control. As such it is
supported in all general purpose database systems. Strong strict two-phase
locking (SS2PL) is a popular serializability mechanism utilized in most of the
database systems (in various variants) since their early days in the 1970s. 
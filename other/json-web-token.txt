JSON Web Tokens
Is for creating data with optional signature and/or optional encryption whose payload holds JSON that asserts some number of claims. The tokens are signed either using a private secret or a public/private key

For example a server could generate a token that has the claim "logged in as administrator" and provide that to a client. The client could then use that token to prove that it is logged in as admin. The tokens can be signed by one party's private key (usually the server's) so that party can subsequently verify the token is legitimate.

If the other party, by some suitable and trustworthy means, is in possession of the corresponding public key, they too are able to verify the token's legitimacy. The tokens are designed to be compact, URL-safe, and usable especially in a web-browser single-sign-on (SSO) context. JWT claims can typically be used to pass identity of authenticated users between an identity provider and a service provider, or any other type of claims as required by business processes.

JWT relies on other JSON-based standards: JSON Web Signature and JSON Web Encryption

Structure
Header: 
Identities which algorithm is used to generate the signature. Typical cryptographic algorithms used are HMAC with SHA-256 and RSA signature with SHA-256. JWA (JSON Web Algorithms) introduces many more for both authentication and encryption

{
	"alg": "HS256",
	"typ": "JWT"
}

Payload: 
Contains a set of claims. The JWT specification defines seven Registered Claim Names which are the starndard fields commonly included in tokens. Customer claims are usually also included, depending on the purpose of the token

{
	"loggedInAs": "admin",
	"iat: 1422779638
}

Signature:
Securely validates the token. The signature is calculated by encoding the header and payload using Base64url Encoding RFC 4648 and concatenating the two together with a period separator. That string is then run through the cryptographic algorithm specified in the header, in this case HMAC-SHA256. The Base64url Encoding is similar to base64, but uses different non-alphanumeric characters and omits padding. 

HMAC_SHA256(
  secret,
  base64urlEncoding(header) + '.' +
  base64urlEncoding(payload)
)

Standard Claim Fields
Code		Name				Description
iss			Issuer				Identifies principal that issued the JWT
sub			Subject				Identifies the subject of the JWT
aud			Audience			
exp			Expiration Time
nbf			Not Before
iat			Issued at
jti			JWT ID

Commonly-Used Header Fields
typ			Token Type
cty			Content Type
alg			Message Authentication Code Algorithm
kid			Key ID
x5c			x.509 Certificate Chain
x5u			x.509 Certificate Chain URL
crit		Critical

JSON Web Signature:
Is an IETF-proposed standard for signing arbitrary data. This is used as the basis for a variety of web-based technologies including JSON Web Token

JWS is a way to ensure integrity of information in a highly serializable, machine-readable format. That means that it is information, along with proof that the information hasn't changed since being signed. It can be used for sending information for one web site to another, and is especially aimed at communications on the web. It even contains a compact form optimized for applications like URI query parameters

JSON Web Encryption:
Is an IETF standard providing a standardised syntax for the exchange of encrypted data, based on JSON and Base64. Along with JSON Web Signature, it is one of the two possible formats of a JWT. JWE forms part of the JavaScript Object Signing and Encryption suite of protocols
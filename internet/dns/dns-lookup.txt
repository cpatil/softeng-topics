What are the steps in a DNS lookup?

	For most situations, DNS is concerned with a domain name being translated into the appropriate IP address. To learn how this process works, it helps to follow the path of a DNS lookup as it travels from a web browser, through the DNS lookup process, and back again. Let's take a look at the steps.

	Note: Often DNS lookup information will be cached either locally inside the querying computer or remotely in the DNS infrastructure. There are typically 8 steps in a DNS lookup. When DNS information is cached, steps are skipped from the DNS lookup process which makes it quicker. The example below outlines all 8 steps when nothing is cached.

 The 8 steps in a DNS lookup:

    1. A user types ‘example.com’ into a web browser and the query travels into the Internet and is received by a DNS recursive resolver.
    
	2. The resolver then queries a DNS root nameserver (.).
    
	3. The root server then responds to the resolver with the address of a Top Level Domain (TLD) DNS server (such as .com or .net), which stores the information for its domains. When searching for example.com, our request is pointed toward the .com TLD.
    
	4. The resolver then makes a request to the .com TLD.
    
	5. The TLD server then responds with the IP address of the domain’s nameserver, example.com.
    
	6. Lastly, the recursive resolver sends a query to the domain’s nameserver.
    
	7. The IP address for example.com is then returned to the resolver from the nameserver.
    
	8. The DNS resolver then responds to the web browser with the IP address of the domain requested initially.

    Once the 8 steps of the DNS lookup have returned the IP address for example.com, the browser is able to make the request for the web page:
    
	9. The browser makes a HTTP request to the IP address.
    
	10. The server at that IP returns the webpage to be rendered in the browser (step 10).

3 types of DNS queries:

    Recursive query: 
		
		In a recursive query, a DNS client requires that a DNS server (typically a DNS recursive resolver) will respond to the client with either the requested resource record or an error message if the resolver can't find the record.

		Best way to remember Recursive query is to memorize that burden is on Server to resolve the query.

    Iterative query: 
	
		In this situation the DNS client will allow a DNS server to return the best answer it can. If the queried DNS server does not have a match for the query name, it will return a referral to a DNS server authoritative for a lower level of the domain namespace. The DNS client will then make a query to the referral address. This process continues with additional DNS servers down the query chain until either an error or timeout occurs.

		Best way to remember Iterative query is to memorize that burden is on Client to resolve the query.

    Non-recursive query: 
	
		Typically this will occur when a DNS resolver client queries a DNS server for a record that it has access to either because it's authoritative for the record or the record exists inside of its cache. Typically, a DNS server will cache DNS records to prevent additional bandwidth consumption and load on upstream servers.

What is DNS caching? Where does DNS caching occur?

	The purpose of caching is to temporarily stored data in a location that results in improvements in performance and reliability for data requests. DNS caching involves storing data closer to the requesting client so that the DNS query can be resolved earlier and additional queries further down the DNS lookup chain can be avoided, thereby improving load times and reducing bandwidth/CPU consumption. DNS data can be cached in a variety of locations, each of which will store DNS records for a set amount of time determined by a time-to-live (TTL).

Browser DNS caching

	Modern web browsers are designed by default to cache DNS records for a set amount of time. the purpose here is obvious; the closer the DNS caching occurs to the web browser, the fewer processing steps must be taken in order to check the cache and make the correct requests to an IP address. When a request is made for a DNS record, the browser cache is the first location checked for the requested record.

Operating system (OS) level DNS caching

	The operating system level DNS resolver is the second and last local stop before a DNS query leaves your machine. The process inside your operating system that is designed to handle this query is commonly called a “stub resolver” or DNS client. When a stub resolver gets a request from an application, it first checks its own cache to see if it has the record. If it does not, it then sends a DNS query (with a recursive flag set), outside the local network to a DNS recursive resolver inside the Internet service provider (ISP).

	When the recursive resolver inside the ISP receives a DNS query, like all previous steps, it will also check to see if the requested host-to-IP-address translation is already stored inside its local persistence layer.
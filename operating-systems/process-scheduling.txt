The process scheduling is the activity of the process manager that handles the
removal of the running process from the CPU and the selection of another process
on the basis of a particular strategy.

Process scheduling is an essential part of a Multiprogramming operating systems.
Such operating systems allow more than one process to be loaded into the
executable memory at a time and the loaded process shares the CPU using time
multiplexing.

The OS maintains all PCBs in Process Scheduling Queues. The OS maintains a
separate queue for each of the process states and PCBs of all processes in the
same execution state are placed in the same queue. When the state of a process
is changed, its PCB is unlinked from its current queue and moved to its new
state queue.

The Operating System maintains the following important process scheduling queues

    Job queue − This queue keeps all the processes in the system.

    Ready queue − This queue keeps a set of all processes residing in main
    memory, ready and waiting to execute. A new process is always put in this
    queue.

    Device queues − The processes which are blocked due to unavailability of an
    I/O device constitute this queue.

Context Switch

A context switch is the mechanism to store and restore the state or context of a
CPU in Process Control block so that a process execution can be resumed from the
same point at a later time. Using this technique, a context switcher enables
multiple processes to share a single CPU. Context switching is an essential part
of a multitasking operating system features.

When the scheduler switches the CPU from executing one process to execute
another, the state from the current running process is stored into the process
control block. After this, the state for the process to run next is loaded from
its own PCB and used to set the PC, registers, etc. At that point, the second
process can start executing.
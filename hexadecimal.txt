hexadecimal (base 16 or hex)

Is a positional numeral system that represents numbers using a radix (base) of 16 unlike the common way of representing numbers using 10 symbols

'0'-'9' to represent values 0 to 9, and 'A'-'F' to represent values 10 to 15

The decimal value 20,429 would be expressed in hexadecimal as '(4FCD)16' or using the '0x' prefix: '0x4FCD'

Each hexadecimal digit represents four bits, also known as a nibble, which is half a byte. For example a single byte can have values ranging from '0000 0000' to '1111 1111' in binary form, which can be conveniently represented as '00' to 'FF' in hexadecimal 

A hex dump is a hexadecimal view of computer data, from memory or from a computer file or storage device. Looking at a hex dump of data is usually done in the context of either debugging or reverse enginnering

For instance in the following hex dump each 8-bit byte is a 2-digit hex number, with spaces between them, while the 32-bit offset at the start is an 8-digit hex number

00000000  57 69 6b 69 70 65 64 69  61 2c 20 74 68 65 20 66  
00000010  72 65 65 20 65 6e 63 79  63 6c 6f 70 65 64 69 61  
00000020  20 74 68 61 74 20 61 6e  79 6f 6e 65 20 63 61 6e 
00000030  20 65 64 69 74 0a

Can express negative numbers the same way as in decimal: '-2A' to represent '(-42)10' 

Can also be used to express the exact bit patterns used in the processor, so a sequence of a hexadecimal digits may represent a signed or even a floating-point value. this way, the negative number '(-42)10' can be written as 'FFFF FFD6' in a 32-bit CPU register(in two's-complement)

Two's complement is a mathematical operation on binary numbers, and is an example of a radix complement. It is used in computing as a method of signed number representation

		2's complement (signed)
Decimal	Binary		Hex
0		0000 0000		00
1 		0000 0001		01
2 		0000 0010		02
126		0111 1110		7E
127 	0111 1111		7F
−128 	1000 0000		FF80
−127 	1000 0001		FF81
−126 	1000 0010		FF82
−2 		1111 1110		FFFE
−1 		1111 1111 		FFFF
